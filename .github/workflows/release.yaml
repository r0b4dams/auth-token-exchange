name: Publish & Release

on:
  workflow_dispatch:
  push:
    tags:
      - v*

jobs:
  build:
    name: Build wheel & tarball
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Build
        run: make build

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  # release:
  #   name: GitHub release
  #   needs: [build]
  #   runs-on: ubuntu-latest

  #   permissions:
  #     contents: write
  #     id-token: write

  #   steps:
  #     - name: Download
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: python-package-distributions
  #         path: dist/

  #     - name: Sign the dists with Sigstore
  #       uses: sigstore/gh-action-sigstore-python@v1.2.3
  #       with:
  #         inputs: >-
  #           ./dist/*.tar.gz
  #           ./dist/*.whl

  #     - name: Create GitHub release
  #       env:
  #         GITHUB_TOKEN: ${{ github.token }}
  #       run: >-
  #         gh release create
  #         '${{ github.ref_name }}'
  #         --repo '${{ github.repository }}'
  #         --notes ""

  #     - name: Upload artifact signatures to GitHub Release
  #       env:
  #         GITHUB_TOKEN: ${{ github.token }}
  #       run: >-
  #         gh release upload
  #         '${{ github.ref_name }}' dist/**
  #         --repo '${{ github.repository }}'

  # cheeseshop:
  #   name: Publish to PyPI
  #   needs: [build]
  #   runs-on: ubuntu-latest

  #   environment:
  #     name: pypi
  #     url: https://pypi.org/p/authexchange

  #   permissions:
  #     id-token: write

  #   steps:
  #     - name: Download
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: python-package-distributions
  #         path: dist/

  #     - name: Publish
  #       uses: pypa/gh-action-pypi-publish@release/v1

  docker:
    name: Push image to Dockerhub
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: debug
        run: |
          ls -a
          cd dist && ls -a

      # - name: Get version
      #   id: get-version
      #   run: echo "version=$(make version)" >> "$GITHUB_OUTPUT"

      - name: Build and push
        run: |
          make version
          make docker-build
          make docker-push


      # - name: Build and push
      #   uses: docker/build-push-action@v5
      #   env:
      #     ORG: ${{ secrets.DOCKERHUB_USERNAME }}
      #     NAME: ${{ github.event.repository.name }}
      #     VERSION: ${{ steps.get-version.outputs.version }}
      #   with:
      #     push: true
      #     build-args: |
      #       NAME=${{ env.NAME }}
      #       VERSION=${{ env.VERSION }}
      #     tags: ${{ env.ORG }}/${{ env.NAME }}:${{ env.VERSION }}
